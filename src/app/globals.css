/* https://github.com/mui/pigment-css/blob/master/examples/pigment-css-nextjs-ts/src/app/globals.css */

/* This file seems to take precedence over styles defined elsewhere */
/* * {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}


a {
  color: inherit;
  text-decoration: none;
}



/* Generally hand over gesture controls to map */
html.map {
  /* Required to stop mobile map and mobile tab bar from rubber-banding on scroll touch events */
  overscroll-behavior: none;
  /* Required to stop page elements from zooming on pinch */
  touch-action: none;

  body {
    /* Vaul drawer seems to otherwise set pointer-events: none, even after closing drawer */
    /* This is required to allow map to be interacted with when drawer is partially open */
    pointer-events: auto !important;
  }

  &.drawer-fully-open {
    /* Required to stop drawer from getting stuck on scroll touch events */
    /* Interferes with scroll content? */
    /* overflow: hidden; */

    body {
      /* Stop map from being interacted with when drawer is fully open */
      pointer-events: none !important;
    }
  }
}

[data-vaul-drawer],
[data-vaul-overlay] {
  /* z-index stack should be ordered like so, from top of stack to bottom: */
  /* 1. Dialogs (e.g. ButtonToDialog) and their overlays */
  /* 2. Drawer content */
  /* NEW: Tab Bar on mobile (check placement) */
  /* NEW: "Return to listing" button */
  /* 3. Map search input and output (the results list) */
  /* 4. Map controls */
  /* 5. Any selected map pin */
  /* 6. Unselected map pins */
  z-index: 3;
}

/* Temporary style overrides for MapTiler GeocodingControl in MapSearch component */
/* Targeting the more general svelte or input also will affect ListingWrite (LocationSearch)  */
input[aria-label="Search"] {
  /* Match visual margins of .maplibregl-ctrl-top-right */
  padding: 10px;
  /* Override the default font size of 14px from map search input, which causes Safari on iOS to zoom and disorientate the map */
  font-size: 16px !important;
}

.maplibregl-ctrl-top-right {
  margin: 0rem 0rem 0 0;
}

/* Misc */
summary.maplibregl-ctrl-attrib-button {
  opacity: 0.24;
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill-rule='evenodd' viewBox='0 0 20 20'%3E%3Cpath d='M4 10a6 6 0 1 0 12 0 6 6 0 1 0-12 0m5-3a1 1 0 1 0 2 0 1 1 0 1 0-2 0m0 3a1 1 0 1 1 2 0v3a1 1 0 1 1-2 0'/%3E%3C/svg%3E") !important;

  &:hover {
    opacity: 1;
  }
}

.sidebar {
  /* background-color: red; */
  transform-origin: center left;
  transition-property: transform, opacity;
  transition-duration: 0.35s;
  transition-timing-function: cubic-bezier(0.32, 0.72, 0, 1);
  /* transition-delay: 1s !important; */
  /* transform: scale(98%); */
}

.sidebar[data-covered="true"] {
  /* transition: transform 0.35s cubic-bezier(0.32, 0.72, 0, 1) !important; */
  transform: scale(0.98) translate3d(-12px, 0px, 0px);
  opacity: 0.5;
}
.sidebar[data-covered="false"] {
  transform: scale(1) translate3d(0px, 0px, 0px);
  opacity: 1;
  /* transition-delay: 0.25s; */
}

@media (min-width: 768px) {
  /* If I want to customize the durations or curves */
  /* [data-vaul-drawer] { */
  /* transition: transform 0.35s cubic-bezier(0.32, 0.72, 0, 1) !important; */
  /* animation-duration: 0.35s !important;
    transition-duration: 0.35s !important; */
  /* } */

  /* Override Vaul's scale-back animation for nested dialogs */
  /* [data-vaul-drawer][data-aria-hidden="true"] {
    pointer-events: none;
    transition: transform 0.5s cubic-bezier(0.32, 0.72, 0, 1) !important;
    transform: scale(0.981503) translate3d(-16px, 0px, 0px) !important;
  } */

  [data-vaul-drawer] {
    user-select: initial !important; /* For some reason Vaul sets user-select: none on the drawer content, perhaps should be enabled here not by breakpoint but by touch device type */
    /* I can see why the above setting would be annoying on touch devices, but not setting it makes Chrome and Firefox on desktop not be ble to select text */
  }
}

[data-vaul-drawer][data-vaul-drawer-direction="right"][data-state="open"] {
  animation-name: fooBarIn !important;
}
[data-vaul-drawer][data-vaul-drawer-direction="right"][data-state="closed"] {
  animation-name: fooBarOut !important;
}

@keyframes fooBarIn {
  0% {
    transform: translateX(24px) rotate(1.35deg); /* TODO: Link to pagePadding variable */
    opacity: 0;
  }
  25% {
    opacity: 1;
  }
  100% {
    transform: translateX(0) rotate(0);
    opacity: 1;
  }
}

@keyframes fooBarOut {
  0% {
    transform: translateX(0) rotate(0);
    opacity: 1;
  }
  25% {
    opacity: 0;
  }
  100% {
    transform: translateX(24px) rotate(1.35deg); /* TODO: Link to pagePadding variable */
    opacity: 0;
  }
}

/* Temporary styles for GeocodingControl  */
#custom-geocoding-styles.error {
  input {
    border-color: hsla(22, 87%, 50%, 1) !important;
    border-width: 1.5px !important;
    background-color: hsla(22, 87%, 50%, 0.0625) !important;
  }
}

#custom-geocoding-styles {
  form.svelte-bz0zu3 {
    width: 100%;
    position: relative;

    .input-group {
      position: relative;

      button.search-button {
        display: none;
      }

      input {
        width: 100%;
        appearance: none;

        /* Manually shared styles until I make my own Geocoding component */
        color: hsla(37, 5%, 25%, 1);
        border: 1px solid hsla(37, 5%, 83%, 1);
        border-radius: calc(1rem * 0.5);
        background-color: hsla(36, 26%, 99%, 1);
        box-shadow: inset 0 -3px 2px 0 rgba(0, 0, 0, 0.03);
        font-size: 1rem;
        min-height: 3.5rem;

        /* Customise for below overflow */
        padding: 0.375rem 2.625rem 0.375rem 0.75rem;

        /* Nice overflow ... */
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      }

      .clear-button-container {
        position: absolute;
        right: 0.625rem;
        top: 50%;
        transform: translateY(-50%);

        /* Accommodate both the close X button and the loading spinner */
        display: flex;
        flex-direction: row-reverse;

        button {
          display: none;
        }

        &.displayable {
          button {
            display: block;
          }
        }

        /* Close button */
        button {
          appearance: none;
          background: none;
          border: none;
          cursor: pointer;

          svg {
            /* Match dimensions of dropdown SVG */
            width: 0.625rem;
            height: 0.625rem;
            fill: hsla(37, 5%, 40%, 1);
          }
        }

        /* Loading spinner */
        .svelte-7cmwmc {
          animation: spin 2s ease-in-out infinite;

          svg {
            /* Easier than adjusting fills and strokes of an SVG I don't know about */
            opacity: 0.65;
          }
        }
      }
    }

    ul.options,
    div.error,
    div.no-results.svelte-bz0zu3 {
      box-sizing: border-box;
      list-style: none;
      margin: 0;
      padding: 0;
      position: absolute;
      width: 100%;
      top: calc(100% + 0.25rem);
      left: 0;
      overflow: hidden;
      font-size: 14px;
      line-height: 16px;

      z-index: 3;

      background: white;
      border-radius: 0.5rem;
      border: 1px solid hsla(37, 5%, 83%, 1);
      box-shadow: 0 5px 10px #33335926;

      display: flex;
      flex-direction: column;

      li {
        img {
          display: none;
        }

        display: flex;
        flex-direction: column;

        font-size: 1rem;
        padding: 0.75rem 1rem;

        &:not(:first-of-type) {
          padding-top: 0.625rem;
        }
        &:not(:last-of-type) {
          padding-bottom: 0.625rem;
        }

        transition: background-color 100ms ease-in-out;

        &:hover {
          background-color: hsla(37, 5%, 95%, 1);
          cursor: pointer;
        }

        span {
          line-height: 135%;
          display: block;

          .primary {
            flex: 1;
            font-weight: 600;
            color: hsla(37, 5%, 25%, 1);
          }

          /* municipality */
          .secondary {
            display: none;
          }
          /* Sydney, New South Wales, Australia */
          .line2 {
            color: hsla(37, 5%, 40%, 1);

            /* display: inline-block; */
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
          }
        }
      }
    }

    div.error,
    div.no-results.svelte-bz0zu3 {
      /* Same as li in the ul.options */
      padding: 0.75rem 1rem;
      font-size: 1rem;
      line-height: 135%;

      svg.svelte-d2loi5 {
        display: none;
      }

      /* The text */
      div.svelte-bz0zu3 {
      }
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
